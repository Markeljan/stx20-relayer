datasource db {
    provider = 'postgresql'
    url = env("POSTGRES_PRISMA_URL")
    directUrl = env("POSTGRES_URL_NON_POOLING")
}

generator client {
    provider = "prisma-client-js"
    binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

model PriceChange {
    id Int @id @default(autoincrement())
    ticker String
    priceUsd Float
    updateDate DateTime
    token Token @relation(fields: [ticker], references: [ticker])

    @@unique([ticker, updateDate])
    @@index([updateDate])
}

model Token {
    ticker String @id
    totalSupply BigInt
    mintLimit BigInt
    creationDate DateTime
    supplyLeftToMint BigInt
    percentageMinted Float
    floorPriceStx Float @default(0)
    floorPriceUsd Float @default(0)
    floorPriceSats Float @default(0)
    floorPriceUsd1hChange Float @default(0)
    floorPriceUsd6hChange Float @default(0)
    floorPriceUsd24hChange Float @default(0)
    floorPriceUsd7dChange Float @default(0)
    floorPriceUsd30dChange Float @default(0)
    marketCap Float @default(0)
    marketCapUsd Float @default(0)
    activeListingsCount Int @default(0)
    priceData PriceData?
    priceChanges PriceChange[]
    listings Listing[]
}

model Balance {
    @@id([address, ticker])
    address String
    ticker String
    balance String
    updateDate DateTime
}

// Listing from api.stx20.com
model Listing {
    id String @id
    token Token @relation(fields: [ticker], references: [ticker])
    creatorAddress String
    creationDate DateTime
    ticker String
    value String
    stxValue String
    usdValue Float
    btcValue Float
    marketFeeValue String
    gasFeeValueBuyer String
    gasFeeValueSeller String
    totalStxValue String
    beneficiary String
    requestStatus String
    tokenReceiverMarketplaceAddress String
    stxSentConfirmed Boolean
    tokenSentConfirmed Boolean
    priceRate Float
    priceRateUsd Float
    priceRateSats Float
    submitted Boolean
    pendingPurchaseTx String[]
    v Int
    creationTxId String
    lastReincarnate DateTime?
    isBuried Boolean?
}

model PriceData {
    ticker String @id
    token Token @relation(fields: [ticker], references: [ticker])
    minPriceRate Float
    maxPriceRate Float
    medianPriceRate Float
    meanPriceRate Float
    medianMinPriceRate Float
    medianMaxPriceRate Float
}

plugin openapi {
    provider = '@zenstackhq/openapi'
    prefix = '/api'
    flavor = 'rest'
    title = 'STX20 API'
    specVersion = '3.0.0'
    version = '0.1.0'
    description = 'Aggregated STX20 Data'
    output = 'stx20-api.json'
}